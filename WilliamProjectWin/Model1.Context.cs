//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WilliamProjectWin
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WilliamAppDBEntities : DbContext
    {
        public WilliamAppDBEntities()
            : base("name=WilliamAppDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<S_XrayReportsButton_Result> S_XrayReportsButton()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<S_XrayReportsButton_Result>("S_XrayReportsButton");
        }
    
        public virtual ObjectResult<S_EandMcodes_Result> S_EandMcodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<S_EandMcodes_Result>("S_EandMcodes");
        }
    
        public virtual ObjectResult<IU_EandMcodes_Result> IU_EandMcodes(Nullable<int> iD, string value, Nullable<int> del)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var delParameter = del.HasValue ?
                new ObjectParameter("Del", del) :
                new ObjectParameter("Del", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IU_EandMcodes_Result>("IU_EandMcodes", iDParameter, valueParameter, delParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IU_XrayReportsButton(Nullable<int> iD, string name, Nullable<int> del)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var delParameter = del.HasValue ?
                new ObjectParameter("Del", del) :
                new ObjectParameter("Del", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IU_XrayReportsButton", iDParameter, nameParameter, delParameter);
        }
    }
}
